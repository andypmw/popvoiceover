import React from 'react';
import Head from 'next/head'
import axios from 'axios';
import AudioPlayer from './main/AudioPlayer';

export default class extends React.Component {
  constructor(props: any) {
    super(props);

    this.handleSourceLanguageCodeChange = this.handleSourceLanguageCodeChange.bind(this);
    this.handleSourceTextChange = this.handleSourceTextChange.bind(this);
    this.handleTranslateButton = this.handleTranslateButton.bind(this);
    this.handleTargetLanguageCodeChange = this.handleTargetLanguageCodeChange.bind(this);
    this.handleTargetTextChange = this.handleTargetTextChange.bind(this);
    this.handleListenButton = this.handleListenButton.bind(this);
    this.handleDownloadButton = this.handleDownloadButton.bind(this);


    this.state = {
      sourceLanguageCode: 'id',
      sourceText: '',

      speechLanguageCode: 'en-US',
      targetText: '',

      audioFileUrl: '',
    };
  }

  handleSourceLanguageCodeChange(e: any) {
    this.setState({ sourceLanguageCode: e.target.value });
  }

  handleSourceTextChange(e: any) {
    this.setState({ sourceText: e.target.value });
  }

  async handleTranslateButton() {
    const body = {
      Text: this.state.sourceText,
      SourceLanguageCode: this.state.sourceLanguageCode,
      TargetLanguageCode: this.props.translateToPollyMap[this.state.speechLanguageCode],
    };

    const res = await (await axios.post('http://localhost:4000/translates/', body)).data;
    
    this.setState({ targetText: res.TranslatedText });
  }

  handleTargetLanguageCodeChange(e: any) {
    this.setState({ speechLanguageCode: e.target.value });
  }

  handleTargetTextChange(e: any) {
    this.setState({ targetText: e.target.value });
  }

  async handleListenButton() {
    const body = {
      Text: this.state.targetText,
      LanguageCode: this.state.speechLanguageCode,
    };

    const res = await (await axios.post('http://localhost:4000/speeches/', body)).data;

    console.log('listen button clicked');
    console.log(res);

    this.setState({ audioFileUrl: 'http://localhost:4000/' + res.FileName });

    console.log(this.state.audioFileUrl);
  }

  async handleDownloadButton() {
    const body = {
      Text: this.state.targetText,
      LanguageCode: this.state.speechLanguageCode,
    };

    const res = await (await axios.post('http://localhost:4000/speeches/', body)).data;

    console.log('download button clicked');
    console.log(res);

    this.setState({ audioFileUrl: 'http://localhost:4000/' + res.FileName });

    window.location = this.state.audioFileUrl;
  }

  render() {
    const defaultSourceLanguageCode = 'id';
    const defaultTargetLanguageCode = 'en-US';

    return (
      <div className="flex min-h-screen flex-col items-center justify-center py-2 bg-slate-100">
        <Head>
          <title>Voice Over Generator</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        
        <div className="container max-w-4xl bg-white border-2 border-slate-300 shadow-lg mb-5">
          <div className="container p-5 bg-slate-50">
            <h1 className="text-xl font-medium">
              Translator
            </h1>
          </div>
          <div className="container p-5">
            <div>
              <div className="mb-2">Source language</div>
              <select
                className="w-full p-1 mb-2 border-2 border-slate-400"
                defaultValue={defaultSourceLanguageCode}
                onChange={e => {
                  console.log(e.target.value);
                }}
              >
                {this.props.translateSourceLanguages.map(lang => (
                  <option
                    key={lang.code}
                    value={lang.code}
                  >
                    {lang.name}
                  </option>
                ))}
              </select>
              <textarea
                className="w-full p-3 border-2 border-slate-400"
                rows={4}
                onChange={this.handleSourceTextChange}
              />
            </div>
          </div>
          <div className="flex justify-end px-5 pb-5">
            <button onClick={this.handleTranslateButton} className="py-2 px-5 mr-3 border-2 border-slate-400">Translate</button>
          </div>
        </div>
        
        <div className="container max-w-4xl bg-white border-2 border-slate-300 shadow-lg">
          <div className="container p-5 bg-slate-50">
            <h1 className="text-xl font-medium">
              Voice Maker
            </h1>
          </div>
          <div className="container p-5">
            <div>
              <div className="mb-2">Speech language</div>
              <select
                className="w-full p-1 mb-2 border-2 border-slate-400"
                defaultValue={defaultTargetLanguageCode}
                onChange={e => {
                  console.log(e.target.value);
                }}
              >
                {this.props.speechLanguages.map(lang => (
                  <option
                    key={lang.code}
                    value={lang.code}
                  >
                    {lang.name}
                  </option>
                ))}
              </select>
              <textarea
                className="w-full p-3 border-2 border-slate-400"
                rows={4}
                value={this.state.targetText}
                onChange={this.handleTargetTextChange}
              />
            </div>
          </div>
          <div className="flex justify-end px-5 pb-5">
            <button onClick={this.handleListenButton} className="py-2 px-5 mr-3 border-2 border-slate-400">Listen</button>
            <button onClick={this.handleDownloadButton} className="py-2 px-5 bg-orange-500 text-white">Download</button>
          </div>
        </div>

        Audio Player:
        <audio id="audioPlayer">
          <source src={this.state.audioUrl} type="audio/mpeg" />
          Your browser does not support the audio element.
        </audio>

        <footer className="flex h-24 w-full items-center justify-center border-t">
          Created by Andy Primawan
        </footer>
      </div>
    );
  }
}